name: PR Checks

on:
  pull_request:
    branches:
      - '**' # Trigger on all branches

env:
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  PLAYWRIGHT_SKIP_BROWSER_GC: 1

jobs:
  pr_checks:
    name: Run PR Checks
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up pnpm
      - uses: pnpm/action-setup@v4
        name: Install NodeJS dependency manager (PNPM)
        with:
          version: 9
          run_install: false

      # Set up Node.js
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      # Install dependencies
      - name: Install dependencies
        run: pnpm install

      # SvelteKit Sync
      - name: SvelteKit Sync
        run: pnpm sync

      # SvelteKit Build
      - name: SvelteKit Build
        run: pnpm build

      # Run Svelte checks
      - name: Run Svelte checks
        run: pnpm check:svelte

      # Check linting (ESLint)
      - name: Check linting (ESLint)
        run: pnpm check:lint

      # Check formatting
      - name: Check formatting (Prettier)
        run: pnpm check:format

      # Run unit tests (Vitest)
      - name: Run unit tests (Vitest)
        run: pnpm test:unit

      # Load Playwright cache
      - name: Cache playwright binaries
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: |
            ~/Library/Caches/ms-playwright
            ~/.cache/ms-playwright
          key: cache-playwright-linux

      # Install Playwright dependencies
      - name: Install playwright dependencies
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install-deps

      # Install Playwright browsers
      - name: Install playwright dependencies
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install

      # Run E2E tests (Playwright)
      - name: Run E2E Tests
        run: pnpm test:e2e
